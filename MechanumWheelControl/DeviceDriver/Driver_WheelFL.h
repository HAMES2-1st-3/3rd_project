/**********************************************************************************************************************
 * \file Driver_WheelFL.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef DEVICEDRIVER_DRIVER_WHEELFL_H_
#define DEVICEDRIVER_DRIVER_WHEELFL_H_
/* Device Driver for wheelFL()
 * 
 * PWM channel          : P02_1,TOUT1 - GTM, TOM0, Channel9
 * direction channel    : P10_1,GP_OUT
 * encoder channel A    : P14_1,REQ15 -  ERS3, OGU0, Interrupt SRC_SCUERU0
 * encoder channel B    : P00_0,GP_IN
 * 
 * duty cycle resolution : 1/50000(PWM_PERIOD) = 0.002%
 */


/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/

/* summary : initialize wheelFL(front left wheel) 
 * argu     >   none
 * return   >   none
 */
void init_wheelFL(void);


/* summary : set wheelFL PWM dutycycle
 * argu     >   dutycycle:  dutycycle percentage, positive mean forward rotate
 *                          negative mean back ward rotate
 * return   >   none
 */
void set_wheelFL_dutycycle(float32 dutycycle); // dutycycle : 100f ~ -100f


/* summary : get wheelFL PWM dutycycle
 * argu     >   void
 * return   >   (float32):  dutycycle percentage, positive mean forward rotate
 *                          negative mean back ward rotate
 */
float32 get_wheelFL_dutycycle(void);


/* summary : get wheelFL encoder ticks
 * argu     >   void
 * return   >   (sint32):   encoder tick, positive mean forward rotate dirction
 *                          positive mean backward rotate dirction
 */
sint32 get_wheelFL_tick(void);





#endif /* DEVICEDRIVER_DRIVER_WHEELFL_H_ */
